{"version":3,"sources":["components/Loading/index.tsx","pages/List/index.tsx"],"names":["Loading","className","type","show","children","classnames","box","hidden","List","useStore","feed","useState","title","description","list","data","setData","loading","setLoading","useEffect","url","getRssDetail","then","console","log","finally","map","index","content","date","link","href","target","moment","format","dangerouslySetInnerHTML","__html"],"mappings":"8JA+BeA,IAtBmB,YAKhB,IAAD,IAJfC,iBAIe,MAJH,GAIG,MAHfC,YAGe,MAHR,SAGQ,MAFfC,YAEe,SADfC,EACe,EADfA,SAEA,OACE,qBACEH,UAAWI,IACT,aADmB,eAEXH,GACRD,EAAW,CACTK,MAAOF,EACPG,QAASJ,IANf,SAUGC,M,iKC+BQI,UAlDF,WAAO,IAAD,EAC2BC,YAAS,QAA5CC,EADQ,sBAESC,mBAAS,CAC/BC,MAAO,GACPC,YAAa,GACbC,KAAM,KALO,mBAERC,EAFQ,KAEFC,EAFE,OAOeL,oBAAS,GAPxB,mBAORM,EAPQ,KAOCC,EAPD,KAqBf,OAZAC,qBAAU,WACHT,EAAKU,MAGVF,GAAW,GACXG,uBAAaX,EAAKU,KAAKE,MAAK,SAACP,GAC3BQ,QAAQC,IAAIT,GACZC,EAAQD,MACPU,SAAQ,WACTP,GAAW,SAEZ,CAACR,EAAKU,MAEP,yBAASnB,UAAU,mBAAnB,SACE,eAAC,IAAD,CAASE,KAAMc,EAAf,UACE,6BAAKF,EAAKH,QACV,4BAAIG,EAAKF,cACRE,EAAKD,KAAKY,KAAI,WAA+BC,GAA/B,IAAEf,EAAF,EAAEA,MAAOgB,EAAT,EAASA,QAASC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,KAAxB,OACb,0BAEE7B,UAAU,wBAFZ,UAIE,+BACE,mBAAG8B,KAAMD,EAAME,OAAO,WAAtB,SAAkCpB,IAClC,kEAAYqB,IAAOJ,GAAMK,OAAO,oCAElC,qBACEjC,UAAU,2BACVkC,wBAAyB,CAACC,OAAQR,OAVtC,kBACkBD","file":"static/js/5.ae59b0fc.chunk.js","sourcesContent":["import React, { FC, HTMLAttributes } from 'react';\r\nimport classnames from 'classnames';\r\nimport './index.scss';\r\nexport interface LoadingProps extends HTMLAttributes<HTMLElement> {\r\n  className?: string;\r\n  type?: 'normal' | 'dark' | 'plain';\r\n  show?: boolean;\r\n}\r\n\r\nconst Loading: FC<LoadingProps> = function({\r\n  className = '',\r\n  type = 'normal',\r\n  show = true,\r\n  children\r\n}: LoadingProps) {\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        'fy-loading',\r\n        `type-${type}`,\r\n        className, {\r\n          box: !!children,\r\n          hidden: !show\r\n        }\r\n      )}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { useEffect, useState } from 'react';\nimport { useStore } from 'react-hookstore';\nimport moment from 'moment';\nimport { getRssDetail } from '@/gists';\nimport Loading from '@/components/Loading';\n\nimport './index.scss';\nconst List = () => {\n    const [feed]: [{url: string}, Function] = useStore('feed');\n    const [data, setData] = useState({\n      title: '',\n      description: '',\n      list: []\n    });\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n      if (!feed.url) {\n        return;\n      }\n      setLoading(true);\n      getRssDetail(feed.url).then((data: any) => {\n        console.log(data);\n        setData(data);\n      }).finally(() => {\n        setLoading(false);\n      });\n    }, [feed.url]);\n    return (\n      <article className=\"mini-feeder-list\">\n        <Loading show={loading}>\n          <h1>{data.title}</h1>\n          <p>{data.description}</p>\n          {data.list.map(({title, content, date, link}, index) => (\n            <section\n              key={`article-${index}`}\n              className=\"mini-feeder-list_item\"\n            >\n              <h2>\n                <a href={link} target=\"__target\">{title}</a>\n                <time>发布日期：{moment(date).format('YYYY年MM月DD日')}</time>\n              </h2>\n              <div\n                className=\"mini-feeder-list_content\"\n                dangerouslySetInnerHTML={{__html: content}}\n              />\n            </section>\n          ))}\n        </Loading>\n      </article>\n    );\n};\n\nList.propTypes = {\n\n};\n\nexport default List;\n"],"sourceRoot":""}