{"version":3,"sources":["router/index.ts","utils/device.ts","store/device.ts","store/feed.ts","index.tsx","utils/ajax.ts","gists/index.ts","utils/querystring.ts"],"names":["component","lazy","routes","path","docEl","document","documentElement","checkDevice","rem","w","getBoundingClientRect","width","device","setAttribute","style","fontSize","name","deviceStore","createStore","state","action","type","feedStore","url","App","useStore","dispatch","deviceCheck","useCallback","useEffect","window","addEventListener","removeEventListener","fallback","renderRoutes","gists","ReactDOM","render","getElementById","baseConfig","isAsync","header","timeout","withCredentials","convert","result","JSON","parse","e","autoAbort","host","process","eAjax","config","ajax","method","Ajax","send","data","res","code","str","trim","slice","split","forEach","item","key","value","location","search","client_id","client_secret","gist_id","rss_file","system_file","parser","RssParser","octokit","goAuth","sessionStorage","removeItem","href","getToken","a","token","getItem","Octokit","auth","query","scope","access_token","setItem","getRssSaved","request","content","files","status","addRssSaved","rss","list","find","title","Error","push","stringify","editRssSaved","oldRss","index","findIndex","removeRss","newList","filter","getRssDetail","parseURL","items","description","map","date","pubDate","snippet","contentSnippet","link","console","log","editSystemConfig","getSystemConfig","saveLimit","updateTime","updateCycle"],"mappings":"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","file":"static/js/main.4f9737f1.chunk.js","sourcesContent":["import { lazy } from 'react';\r\nimport { RouteConfig } from 'react-router-config';\r\nconst Home = lazy(() => import('@/pages/Home'));\r\nconst List = lazy(() => import('@/pages/List'));\r\nexport default [\r\n  {\r\n    component: Home,\r\n    routes: [\r\n      {\r\n        path: '/',\r\n        component: List\r\n      }\r\n    ]\r\n  }\r\n] as unknown as RouteConfig[];\r\n","const docEl = document.documentElement;\r\nfunction getScreenSizeW(): number {\r\n  return docEl.getBoundingClientRect().width;\r\n}\r\n\r\nfunction checkDevice(): object {\r\n  let rem = 16;\r\n  const w = getScreenSizeW();\r\n  let device = '';\r\n  if (w < 768) {\r\n    device = 'mobile';\r\n  } else if (w >= 768 && w <= 1024) {\r\n    device = 'pad';\r\n  } else {\r\n    device = 'pc';\r\n  }\r\n  if (device === 'mobile') {\r\n    rem = (docEl.getBoundingClientRect().width) / 375 * 10;\r\n  }\r\n  docEl.setAttribute('data-device', device);\r\n  docEl.style.fontSize = rem + 'px';\r\n  return {\r\n    name: device,\r\n    rem\r\n  };\r\n}\r\n\r\nexport {\r\n  checkDevice\r\n};\r\n","import { createStore } from 'react-hookstore';\r\nimport { checkDevice } from '@/utils/device';\r\nconst deviceStore = createStore(\r\n  'device',\r\n  {\r\n    ...checkDevice(),\r\n  },\r\n  (state: any, action: any) => {\r\n    switch (action.type) {\r\n      case 'change':\r\n        return {\r\n          ...state,\r\n          name: action.name\r\n        }\r\n    }\r\n  }\r\n)\r\n\r\nexport default deviceStore;\r\n","import { createStore } from 'react-hookstore';\r\nconst feedStore = createStore(\r\n  'feed',\r\n  {\r\n    url: '' // 当前选中的订阅地址\r\n  },\r\n  (state: any, action: any) => {\r\n    switch (action.type) {\r\n      case 'select':\r\n        return {\r\n          ...state,\r\n          url: action.url\r\n        }\r\n    }\r\n  }\r\n)\r\n\r\nexport default feedStore;\r\n","import React, { FC, Suspense, useCallback, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { renderRoutes } from 'react-router-config';\nimport { BrowserRouter } from 'react-router-dom';\nimport { useStore } from 'react-hookstore';\nimport routes from '@/router';\nimport { checkDevice } from '@/utils/device';\nimport * as gists from '@/gists';\nimport * as store from '@/store';\nimport '@/assets/scss/common.scss';\n\nconst App: FC = function () {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const _store = store;\n  const [, dispatch] = useStore('device');\n  const deviceCheck = useCallback(() => {\n    dispatch({\n      type: 'change',\n      ...checkDevice()\n    })\n  }, [dispatch]);\n\n  useEffect(() => {\n    window.addEventListener('resize',deviceCheck);\n    return (): void => {\n      window.removeEventListener('resize', deviceCheck);\n    };\n  }, [deviceCheck]);\n\n  return (\n    <BrowserRouter>\n      <Suspense fallback={null}>\n        {renderRoutes(routes, { gists })}\n      </Suspense>\n    </BrowserRouter>\n  );\n}\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n","import eAjax, { AjaxOptions, HttpMethod } from 'extend-ajax';\r\nconst baseConfig: AjaxOptions= {\r\n  isAsync: true,\r\n  header: {\r\n    \"Content-Type\": 'json',\r\n    \"Accept\": \"json\"\r\n  },\r\n  timeout: 10000,\r\n  withCredentials: true,\r\n  convert (result: string): JSON | string {\r\n    try {\r\n      return JSON.parse(result);\r\n    } catch (e) {\r\n      return result;\r\n    }\r\n  },\r\n  autoAbort: true,\r\n  host: process.env.REACT_APP_AJAX || ''\r\n};\r\neAjax.config(baseConfig);\r\nfunction ajax (url: string, method: HttpMethod, config: AjaxOptions = {}): any {\r\n  const Ajax = eAjax(url, method, config);\r\n  return {\r\n    async send (data: string | Record<string, unknown> | null | undefined): Promise<any> {\r\n      const res = await Ajax.send(data);\r\n      return res.data;\r\n    }\r\n  };\r\n}\r\nexport default ajax;\r\n","import { Octokit } from '@octokit/core';\r\nimport { parse } from '@/utils/querystring';\r\nimport ajax from '@/utils/ajax';\r\nimport RssParser from 'rss-parser';\r\nconst proxy = process.env.REACT_APP_CORS_PROXY || '';\r\nconst { code } = parse(window.location.search);\r\nconst client_id = process.env.REACT_APP_CLIENT_ID || '';\r\nconst client_secret = process.env.REACT_APP_CLIENT_SECRET || '';\r\nconst gist_id = process.env.REACT_APP_GIST_ID || '';\r\nconst callback_url = process.env.REACT_APP_CALLBACK_URL || '';\r\nconst rss_file = 'rss.json';\r\nconst system_file = 'system.json';\r\nconst parser = new RssParser();\r\n\r\nlet octokit: Octokit | null = null;\r\n\r\nexport interface RSS_DATA {\r\n  title?: string;\r\n  url: string;\r\n  updateDate?: string;\r\n};\r\n\r\nexport interface RSS_ARTICLE {\r\n  title?: string;\r\n  date?: string;\r\n  snippet?: string;\r\n  link?: string;\r\n  content?: string;\r\n}\r\n\r\nexport interface SYSTEM_CONFIG {\r\n  saveLimit?: Number;\r\n  updateTime?: String;\r\n  updateCycle?: Number;\r\n}\r\n\r\n// 前往github授权页\r\nexport const goAuth = function () {\r\n  sessionStorage.removeItem('token');\r\n  window.location.href = `https://github.com/login/oauth/authorize?client_id=${client_id}&redirect_uri=${callback_url}&scope=gist`;\r\n};\r\n\r\nif (!code) {\r\n  goAuth();\r\n}\r\n\r\n// 获取token凭证\r\nexport async function getToken(): Promise<string> {\r\n  const token = sessionStorage.getItem('token');\r\n  if (token) {\r\n    octokit = new Octokit({auth: token});\r\n    return token;\r\n  }\r\n  const { access_token } = await ajax('/login/oauth/access_token', 'get', {\r\n    query: {\r\n      client_id,\r\n      code,\r\n      client_secret,\r\n      scope: 'gist'\r\n    }\r\n  }).send();\r\n  if (access_token) {\r\n    sessionStorage.setItem('token', access_token);\r\n    octokit = new Octokit({ auth: token });\r\n  } else {\r\n    goAuth();\r\n  }\r\n  return access_token;\r\n};\r\n\r\n// 获取收藏的RSS\r\nexport const getRssSaved = async (): Promise<RSS_DATA[]> => {\r\n  await getToken();\r\n  if (!octokit) {\r\n    return [];\r\n  }\r\n  try {\r\n    const { data } = await octokit.request(`GET /gists/${gist_id}`);\r\n    const { content } = data.files[rss_file];\r\n    return JSON.parse(content);\r\n  } catch (e) {\r\n    if (e.status === 401) {\r\n      goAuth();\r\n    }\r\n    return [];\r\n  }\r\n};\r\n\r\n// 新增RSS\r\nexport const addRssSaved = async (rss: RSS_DATA): Promise<Boolean|Error> => {\r\n  await getToken();\r\n  if (!octokit) {\r\n    return false;\r\n  }\r\n  const list = await getRssSaved();\r\n  const isHave = !!list.find((item) => rss.url === item.url || rss.title === item.title);\r\n  if (isHave) {\r\n    return new Error('存在相同订阅源链接或者标题');\r\n  }\r\n  list.push(rss);\r\n  try {\r\n    await octokit.request(`PATCH /gists/${gist_id}`, {\r\n      files: {\r\n        [rss_file]: {\r\n          content: JSON.stringify(list)\r\n        }\r\n      }\r\n    });\r\n    return true;\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n};\r\n\r\n// 编辑RSS\r\nexport const editRssSaved = async (rss: RSS_DATA, oldRss: RSS_DATA): Promise<Boolean|Error> => {\r\n  await getToken();\r\n  if (!octokit) {\r\n    return false;\r\n  }\r\n  const list = await getRssSaved();\r\n  const index = list.findIndex((item) => oldRss.url === item.url && oldRss.title === item.title);\r\n  if (index === -1) {\r\n    return new Error('编辑失败，不存在该订阅源!');\r\n  }\r\n  const newIndex = list.findIndex((item) => rss.url === item.url || rss.title === item.title);\r\n  if (newIndex !== index) {\r\n    return new Error('编辑失败，已存在相同订阅源!');\r\n  }\r\n  list[index] = rss;\r\n  try {\r\n    await octokit.request(`PATCH /gists/${gist_id}`, {\r\n      files: {\r\n        [rss_file]: {\r\n          content: JSON.stringify(list)\r\n        }\r\n      }\r\n    });\r\n    return true;\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n};\r\n\r\n// 删除RSS\r\nexport const removeRss = async (url: string): Promise<Boolean|Error> => {\r\n  await getToken();\r\n  if (!octokit) {\r\n    return false;\r\n  }\r\n  const list = await getRssSaved();\r\n  const newList = list.filter((item) => item && item.url !== url);\r\n\r\n  try {\r\n    await octokit.request(`PATCH /gists/${gist_id}`, {\r\n      files: {\r\n        [rss_file]: {\r\n          content: JSON.stringify(newList)\r\n        }\r\n      }\r\n    });\r\n    return true;\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n};\r\n\r\n// 获取RSS详情\r\nexport const getRssDetail = async (url: string): Promise<{\r\n  list: RSS_ARTICLE[];\r\n  title?: string;\r\n  description?: string;\r\n}> => {\r\n  const {\r\n    items,\r\n    title,\r\n    description\r\n  } = await parser.parseURL(proxy + url);\r\n  const list: RSS_ARTICLE[] = items.map(({\r\n    title,\r\n    pubDate,\r\n    contentSnippet,\r\n    link,\r\n    content\r\n  }) => ({\r\n    title,\r\n    date: pubDate,\r\n    snippet: contentSnippet,\r\n    link,\r\n    content\r\n  }));\r\n  console.log(items);\r\n  return {\r\n    list,\r\n    title,\r\n    description\r\n  };\r\n};\r\n\r\n// 编辑系统设置\r\nexport const editSystemConfig = async (config: SYSTEM_CONFIG): Promise<Boolean|Error> => {\r\n  await getToken();\r\n  if (!octokit) {\r\n    return false;\r\n  }\r\n  try {\r\n    await octokit.request(`PATCH /gists/${gist_id}`, {\r\n      files: {\r\n        [system_file]: {\r\n          content: JSON.stringify(config)\r\n        }\r\n      }\r\n    });\r\n    return true;\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n};\r\n\r\n\r\n// 编辑系统设置\r\nexport const getSystemConfig = async (): Promise<SYSTEM_CONFIG> => {\r\n  await getToken();\r\n  if (!octokit) {\r\n    return {\r\n      saveLimit: 10,\r\n      updateTime: '14:00',\r\n      updateCycle: 1\r\n    };\r\n  }\r\n  try {\r\n    const { data } = await octokit.request(`GET /gists/${gist_id}`);\r\n    const { content } = data.files[system_file];\r\n    return JSON.parse(content);\r\n  } catch (e) {\r\n    return {\r\n      saveLimit: 10,\r\n      updateTime: '14:00',\r\n      updateCycle: 1\r\n    };\r\n  }\r\n};\r\n","export const parse = function (str: string): Record<string, any> {\r\n  const data: Record<string, any> = {};\r\n  str = str.trim();\r\n  if (str[0] === '?') {\r\n    str = str.slice(1)\r\n  }\r\n  str.split('&').forEach((item) => {\r\n    const [key, value] = item.split('=');\r\n    if (key) {\r\n      data[key] = value;\r\n    }\r\n  });\r\n  return data;\r\n};\r\n"],"sourceRoot":""}